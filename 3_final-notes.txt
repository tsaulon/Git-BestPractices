FINAL NOTES
-----------

1)  Commit related changes (e.g. Fixing 2 different bugs should produce 2 different commits)
2)  Commit often    (e.g. Keep commits small and easier for team to follow and potential rollbacks)
3)  DO NOT commit half-done work (tip: Look into git's 'stash' feature)
4)  Test before committing (e.g. ensure 0 side-effects)
5)  Write good commit messages
    -   Use a short summary of up to 50 characters as a guideline and should answer questions like below:
    >   What was the motivation for change?
    >   How does it differe from previous implementation?
    >   Use present tense (e.g. LIKE: change, NOT LIKE: changed or changes)
6)  Version control is not a backup system.
7)  Use branches (e.g. for new feature, bug fixes)
8)  Agree on a workflow (e.g. we are currently use Feature Branch Workflow)